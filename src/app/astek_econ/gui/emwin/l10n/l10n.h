/**
  * @file    l10n.h
  * @brief   User Interface - Display - Localization
  * @author  Igor T. <research.tahoe@gmail.com>
  */


#ifndef L10N_H
#define L10N_H


#include <stdlib.h>


typedef enum    l10n_lang_e
{
    L10N_LANG_ENGLISH           = 0,
    L10N_LANG_RUSSIAN,           
    L10N_LANG_MAX,
} l10n_lang_t;


typedef enum    l10n_str_id_e
{
    L10N_STR_ID_ALLOWED             = 0,
    L10N_STR_ID_AUTO,
    L10N_STR_ID_AUTO_CALIBRATION,
    L10N_STR_ID_AUTOLAUNCH,
    L10N_STR_ID_ADDRES,    
    L10N_STR_ID_CALIBRATION_CORRECTION,
    L10N_STR_ID_BACK,
    L10N_STR_ID_BAUDRATE,   
    L10N_STR_ID_CALIBRATE,
    L10N_STR_ID_CALIBRATE_AL,
    L10N_STR_ID_CALIBRATE_AR,
    L10N_STR_ID_CALIBRATION,
    L10N_STR_ID_CALIBRATION_CHANNEL_1,
    L10N_STR_ID_CALIBRATION_CHANNEL_2,
    L10N_STR_ID_CANCEL,
    L10N_STR_ID_CL420,
    L10N_STR_ID_CLOOP_ERROR,
    L10N_STR_ID_CLOOP_CAL,
    L10N_STR_ID_CLOOP_4MA,
    L10N_STR_ID_CLOOP_20MA,    
    L10N_STR_ID_CLOOP_3MA,
    L10N_STR_ID_CLOOP_22MA,
    L10N_STR_ID_COEFFICIENT,
    L10N_STR_ID_COMPLETED,
    L10N_STR_ID_CONFIRM,
    L10N_STR_ID_CONTINUOUS,
    L10N_STR_ID_CORRECTION,
    L10N_STR_ID_COARSE,
    L10N_STR_ID_CYCLE,
    L10N_STR_ID_CYCLE_CZM,
    L10N_STR_ID_CYCLE_CSM,
    L10N_STR_ID_CYCLE_PCZM,
    L10N_STR_ID_CYCLE_PCSM,
    L10N_STR_ID_DATA_BITS,
    L10N_STR_ID_DATE,
    L10N_STR_ID_DAY,
    L10N_STR_ID_DAYS,
    L10N_STR_ID_DEBUG,
    L10N_STR_ID_DIAGNOSTICS,
    L10N_STR_ID_DISABLED,
    L10N_STR_ID_DISCRETE_OUTPUT,
    L10N_STR_ID_ENABLED,
    L10N_STR_ID_ENGLISH,
    L10N_STR_ID_ENTER,
    L10N_STR_ID_ERROR,
    L10N_STR_ID_EVENT_LINK_ERROR,  
    L10N_STR_ID_EVENT_LINK_OK,
    L10N_STR_ID_HTTP,    
    L10N_STR_ID_KEY_OFF,
    L10N_STR_ID_EVENT_PID_TEMP_MEASURE_ERR,
    L10N_STR_ID_EVENT_PID_TEMP_MEASURE_OK,
    L10N_STR_ID_EVENT_PID_TEMP_TOO_LOW_ERR,
    L10N_STR_ID_EVENT_PID_TEMP_TOO_HIGH_ERR,
    L10N_STR_ID_EVENT_PID_NOT_IN_RANGE_LOW,
    L10N_STR_ID_EVENT_PID_NOT_IN_RANGE_HIGH,    
    L10N_STR_ID_EVENT_SYSTEM_STARTUP,    
    L10N_STR_ID_EVENT_VALUE_TOO_HIGH_WAR,
    L10N_STR_ID_EVENT_VALUE_TOO_LOW_WAR,
    L10N_STR_ID_EVENT_SENSOR_VALUE_OK,
    L10N_STR_ID_EVENT_SENSOR_ZERO_CALIBRATION,
    L10N_STR_ID_EVENT_SENSOR_SPAN_CALIBRATION,    
    L10N_STR_ID_EVENT_SENSOR_RESTORE_CALIBRATION,
    L10N_STR_ID_EVENT_SENSOR_RESTORE_ZERO_CALIBRATION,    
    L10N_STR_ID_EVENT_SENSOR_RESTORE_SPAN_CALIBRATION,
    L10N_STR_ID_EVENT_SENSOR_CHAR,
    L10N_STR_ID_EVENT_SENSOR_LINEARIZATION,
    L10N_STR_ID_EVENT_SENSOR_ZERO_OFFSET,
    L10N_STR_ID_EVENT_CALIBRATION_4MA,
    L10N_STR_ID_EVENT_CALIBRATION_20MA,
    L10N_STR_ID_EVENT_FACTORY_RESET,
    L10N_STR_ID_EVENT_VERIFYCATION_START,
    L10N_STR_ID_EVENT_VERIFYCATION_STOP,    
    L10N_STR_ID_EVENT_SENSOR_ZERO_FACTORY_UPDATE,
    L10N_STR_ID_EVENT_SENSOR_ZERO_FACTORY_RESTORE,
    L10N_STR_ID_EVENT_SENSOR_SPAN_FACTORY_UPDATE,
    L10N_STR_ID_FACTORY_SETTINGS,
    L10N_STR_ID_FILTER,
    L10N_STR_ID_FILTER_CUTOFF,
    L10N_STR_ID_FILTER_ORDER,
    L10N_STR_ID_FINE,
    L10N_STR_ID_FIRMWARE_VER,
    L10N_STR_ID_GW,    
    //L10N_STR_ID_HELP,
    L10N_STR_ID_HOUR_METER,
    L10N_STR_ID_HOUR,
    L10N_STR_ID_INFO,
    L10N_STR_ID_INTERVAL,
    L10N_STR_ID_CHANNEL,
    L10N_STR_ID_CONSOLE,
    L10N_STR_ID_CONSOLE_AL,
    L10N_STR_ID_CONSOLE_AR,
    L10N_STR_ID_CLOOP,
    L10N_STR_ID_IP,
    L10N_STR_ID_LANGUAGE,
    L10N_STR_ID_LAUNCH,
    L10N_STR_ID_LOWER,
    L10N_STR_ID_MAC,
    L10N_STR_ID_MEASURE,
    L10N_STR_ID_MEASURE_AL,
    L10N_STR_ID_MEASURE_AR,
    L10N_STR_ID_MIDDLE,
    L10N_STR_ID_MIN,
    L10N_STR_ID_MINUTES,
    L10N_STR_ID_MODE,
    L10N_STR_ID_MDB_RELAY,
    L10N_STR_ID_MONTH,
    L10N_STR_ID_MODBUS,
    L10N_STR_ID_NETWORK,
    L10N_STR_ID_OVER_MODBUS,
    //L10N_STR_ID_OUTPUT,
    L10N_STR_ID_PARITY,    
    L10N_STR_ID_PASSWORD,
    L10N_STR_ID_PASSWORD_RESET,
    L10N_STR_ID_POINT_LOW,
    L10N_STR_ID_PORT,
    L10N_STR_ID_PRESSURE,
    L10N_STR_ID_PROCESS,
    L10N_STR_ID_PROHIBITED,
    L10N_STR_ID_PURGE,
    L10N_STR_ID_RANGE,
    L10N_STR_ID_REMOTELY,
    L10N_STR_ID_RESTORE,
    L10N_STR_ID_RELAY,
    L10N_STR_ID_RELAY_1,    
    L10N_STR_ID_RELAY_2,
    L10N_STR_ID_RELAY_STATE_NO,
    L10N_STR_ID_RELAY_STATE_NC,    
    //L10N_STR_ID_RMSE,
    L10N_STR_ID_RUNS_COUNTER,
    L10N_STR_ID_RUSSIAN,
    L10N_STR_ID_SCALE,
    L10N_STR_ID_SEC,
    L10N_STR_ID_SECONDS,
    L10N_STR_ID_SELECT,
    L10N_STR_ID_SENSOR,
    L10N_STR_ID_SERIAL_NUM,
    L10N_STR_ID_SERVICE,
    L10N_STR_ID_SETUP,
    L10N_STR_ID_SETUP_AL,
    L10N_STR_ID_SETUP_AR,
    L10N_STR_ID_SLOPE,
    L10N_STR_ID_SMOOTHING,
    L10N_STR_ID_SPECIFY,
    L10N_STR_ID_SPAN,
    L10N_STR_ID_STATE,    
    L10N_STR_ID_STOP_BITS,    
    L10N_STR_ID_SUCCESS,
    L10N_STR_ID_SN,
    L10N_STR_ID_SYSTEM,
    L10N_STR_ID_TEMPERATURE,
    L10N_STR_ID_TIMINGS,
    L10N_STR_ID_THRESHOLD,
    L10N_STR_ID_THRESHOLD_VALUE,
    L10N_STR_ID_THRESHOLD_1,
    L10N_STR_ID_THRESHOLD_2,
    L10N_STR_ID_TIME,
    L10N_STR_ID_UPPER,
    L10N_STR_ID_VALUE,
    L10N_STR_ID_YEAR,
    L10N_STR_ID_ZERO,
    L10N_STR_ID_LAST,
} l10n_str_id_t;


typedef char const *            l10n_str_t;


const   char *  l10n_str_get( const l10n_lang_t, const l10n_str_id_t );

const   char **
l10n_lang_list_get( void );

size_t
l10n_lang_countof_get( void );

const   char **
l10n_relay_mode_list_get( int lang );

size_t
l10n_mode_countof_get( void );


#endif  //L10N_H
